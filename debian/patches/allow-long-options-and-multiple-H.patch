Index: bombard/src/bombard.in
===================================================================
--- bombard.orig/src/bombard.in	2012-11-08 12:03:55.000000000 +0100
+++ bombard/src/bombard.in	2012-11-08 12:04:28.000000000 +0100
@@ -5,15 +5,26 @@
 #
 
 use POSIX;
-use Getopt::Std;
+use Getopt::Long;
 use File::Basename;
 use FindBin;
 use strict;
-use vars qw($opt_d $opt_f $opt_v $opt_h $opt_H $opt_i $opt_l $opt_r $opt_s $opt_t);
+use vars qw($opt_d $opt_f $opt_v $opt_h @opt_H $opt_i $opt_l $opt_r $opt_s $opt_t);
 
 my $bdir = $FindBin::Bin;
 
-getopts "d:f:H:hvi:l:r:s:t:";
+my $result = GetOptions( "d|delay=i" => \$opt_d,
+                         "f|urlfile=s" => \$opt_f,
+			 "h|help" => sub { usage() },
+			 "i|increment=i" => \$opt_i,
+			 "l|rundir=s" => \$opt_l,
+			 "r|runs=i" => \$opt_r,
+			 "s|start=i" => \$opt_s,
+			 "t|time=i" => \$opt_t,
+			 "v|version" => \$opt_v,
+			 "H|header=s" => \@opt_H );
+
+usage() if not $result;
 
 my $delay   = $opt_d ? $opt_d : 15;
 my $sites   = $opt_f;
@@ -22,31 +33,58 @@
 my $runs    = $opt_r ? $opt_r : 10;
 my $start   = $opt_s;
 my $length  = $opt_t ? $opt_t : 5;
-my $header  = $opt_H ? "-H \"$opt_H\"" : "";
+my $header  = scalar(@opt_H) ? join(" ", map { "-H \"$_\"" } @opt_H) : "";
 my $version = "bombard-%_VERSION% [build %_DATE%]\n";
 my $siege   = "%_SIEGE%";
 
-my $usage = 
-"Usage: bombard [options]
+sub usage {
+	my $exitcode = shift || 0;
+	print <<EOM;
+Usage: bombard [options]
 Options:
   -d <delay>      Default 15	Max delay between connections (secs)
+  --delay
+
   -f <URL file>	  Required	URLs to test
+  --urlfile
+
   -h              Optional      This output
+  --help
+
   -i <increment>  Required	Additional simulated users per run
+  --increment
+
   -l <run dir>    Optional      Used to store results
+  --rundir
+
   -r <runs>       Default 10 
+  --runs
+
   -s <start>      Required	Number of simulated users for first run
+  --start
+
   -t <time>       Default 5	Duration of each run (mins)
+  --time
+
   -v              Version  
+  --version
+
   -H header       Optional      Pass an optional header to siege
+  --header
 
 If the run directory isn't specified .siegerc is read for a logfile entry and
-that directory will be used.  If there is no logfile entry in .siegerc the
-current directory is used\n";
+that directory will be used. If there is no logfile entry in .siegerc the
+current directory is used.
+EOM
+	exit($exitcode);
+}
+
 
 if( $opt_v ){ print $version; exit; }
-if( $opt_h ){ print $usage; exit; }
-die $usage unless $sites and $start and $inc;
+unless ($sites and $start and $inc) {
+	print "Please specify --urlfile, --start and --increment\n\n";
+	usage(1);
+}
 
 my $logf;
 my $rc = $ENV{HOME} . "/.siegerc";
Index: bombard/doc/bombard.1.in
===================================================================
--- bombard.orig/doc/bombard.1.in	2012-11-08 12:03:55.000000000 +0100
+++ bombard/doc/bombard.1.in	2012-11-08 12:03:56.000000000 +0100
@@ -2,8 +2,8 @@
 .SH NAME
 bombard v%_VERSION% - drive siege and create charts from the results
 .SH SYNOPSIS
-bombard -f\ file -s\ start -i\ increment [-l\ rundir] [-r\ runs] [-t\ time]
-[-d\ delay]
+bombard -f\ file -s\ start -i\ increment [-l\ rundir] [-r\ runs] [-t\ time] [-d\ delay]
+bombard --urlfile file --start 4 --increment 4 --rundir /tmp/ --runs 4 --time 4 --delay 15
 .PP
 bombard -h
 .SH DESCRIPTION
@@ -30,42 +30,56 @@
 .SH OPTIONS
 .TP
 -d delay
+--delay delay
 Max random delay in seconds between connections by a simulated user.  See the
 siege documentation for more details but you can probably just leave this at 
 the default setting of 15.
 .TP
 -f file
+--urlfile file
 The file listing the URLs to be tested.  See the siege documentation for the 
 format of this file but basically for GETs its just a list of URLs.  Can be 
 either absolute or relative to the directory with the siege log.
 .TP
 -h
+--help
 Display usage and then exit.
 .TP
+-H "Cache-Control: no-cache"
+--header "Cache-Control: no-cache"
+Add a HTTP header to each request. Can ben specified multiple times.
+.TP
 -i increment
+--increment increment
 Increment by which the number of simulated users is increased for each run of 
 siege.
 .TP
 -l rundir
+--rundir rundir
 The directory which will be used to hold the results of the stress test.
 The default is to read .siegerc for a logfile entry and use the same
 directory.
 .TP
 -r runs
+--runs runs
 The number of siege runs to do.  Defaults to 10.
 .TP
 -s start
+--start start
 Number of simulated users for first run.
 .TP
 -t time
+--time time
 .TP
 -v
+--version
 Display version and then exit
 Duration of each run (mins).  Defaults to 5.
 .SH EXAMPLES
 A basic example using the defaults might look like:
 .IP
 bombard -f testpages -s 10 -i 10
+bombard --urlfile testpages --start 10 --increment 10
 .IP
 This would pull URLs from the file called testpages running siege 10 times
 starting with 10 simulated users and building up to 100.
@@ -73,6 +87,7 @@
 Another example this time using all of the options might look like:
 .IP
 bombard -f testpages -s 10 -i 10 -d 30 -l /tmp -r 20 -t 10
+bombard --urlfile testpages --start 10 --increment 10 --delay 10 --rundir /tmp/ --runs 20 --time 20
 .IP
 This is as the previous example except that the delay has been increased to 30
 seconds, the tests will build up to 200 simulated users, each run will last
